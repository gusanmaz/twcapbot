package twcapbot

import (
	"fmt"
	"github.com/gusanmaz/twigger"
)

const BotName = "Tweet Caption Bot"

var infoNoteTempl = "Tweet published at %v *** Tweet ID: %v *** User ID: %v"

var (
	botScreenName    string
	botAndScreenName string
	endNotes1        string
	endNotes2        string
	endNotes3        string
	endNotes         string
	videoNote        string
	gifNote          string
)

// This function should be called shortly after the bot is created
func SetBotScreenName(botScreenName string) {
	botScreenName = botScreenName
	botAndScreenName = fmt.Sprintf("%v (%v)", BotName, botScreenName)
	endNotes1 = fmt.Sprintf("Generated by %v.", botAndScreenName)
	endNotes2 = "The bot is currently at it's early beta stage."
	endNotes3 = "Use at your own risk! Feedbacks are appreciated ðŸ˜‡"

	endNotes = fmt.Sprintf("%v %v %v", endNotes1, endNotes2, endNotes3)
	videoNote = fmt.Sprintf("%v cannot properly captionize video tweets for now.", botAndScreenName)
	gifNote = fmt.Sprintf("%v cannot propery captionize tweets with GIF images for now", botAndScreenName)
}

func GetCaptionsForTweet(tw twigger.Tweet, quotedTweet *twigger.Tweet) []string {
	captions := make([]string, 0)
	warningNote := []string{}
	textNote := ""
	infoNote := ""

	action := "tweet"
	if tw.Retweeted {
		action = "retweet"
	}

	if quotedTweet == nil {
		textNote = fmt.Sprintf("%v %ved: %v", tw.User.ScreenName, action, tw.FullText)
		infoNote = fmt.Sprintf(infoNoteTempl, tw.CreatedAt, tw.Id, tw.User.Id)

		if tw.ContainsVideo() {
			warningNote = append(warningNote, videoNote)
		}
		if tw.ContainsGIF() {
			warningNote = append(warningNote, gifNote)
		}
	} else {
		textNote = fmt.Sprintf("%v tweeted: %v <br/><br/>", tw.User.ScreenName, tw.FullText)
		quoter := tw.User.ScreenName
		if tw.RetweetedStatus != nil {
			quoter = tw.RetweetedStatus.User.ScreenName
		}
		textNote += fmt.Sprintf("%v quoted tweet of %v <br/><br/>", quoter, quotedTweet.User.ScreenName) // (???)
		textNote += fmt.Sprintf("Quoted tweet's content: %v", quotedTweet.FullText)

		originalTweetInfoNote := fmt.Sprintf(infoNoteTempl, tw.CreatedAt, tw.Id, tw.User.Id)
		quotedTweetInfoNote := fmt.Sprintf(infoNoteTempl, quotedTweet.CreatedAt, quotedTweet.Id, quotedTweet.User.Id)
		infoNote = fmt.Sprintf("Original Tweet: %v <br/><br/>Quoted tweet: %v", originalTweetInfoNote, quotedTweetInfoNote)

		originalTweetHasSpecialMedia := tw.ContainsGIF() || tw.ContainsVideo()
		quotedTweetHasSpecialMedia := quotedTweet.ContainsGIF() || quotedTweet.ContainsVideo()

		if originalTweetHasSpecialMedia {
			if tw.ContainsVideo() {
				warningNote = append(warningNote, videoNote)
			}
			if tw.ContainsGIF() {
				warningNote = append(warningNote, gifNote)
			}
		} else if quotedTweetHasSpecialMedia {
			if quotedTweet.ContainsVideo() {
				warningNote = append(warningNote, videoNote)
			}
			if quotedTweet.ContainsGIF() {
				warningNote = append(warningNote, gifNote)
			}
		}
	}

	captions = append(captions, textNote, infoNote)
	captions = append(captions, warningNote...)
	captions = append(captions, endNotes)

	return captions
}
